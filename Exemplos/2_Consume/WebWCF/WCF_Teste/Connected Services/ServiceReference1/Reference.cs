//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Teste.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentData", Namespace="http://schemas.datacontract.org/2004/07/WebWCF")]
    [System.SerializableAttribute()]
    public partial class StudentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WebWCF")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCF_Teste.ServiceReference1.Class[] ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCF_Teste.ServiceReference1.Class[] Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Class", Namespace="http://schemas.datacontract.org/2004/07/WebWCF")]
    [System.SerializableAttribute()]
    public partial class Class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCF_Teste.ServiceReference1.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCF_Teste.ServiceReference1.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISchoolService")]
    public interface ISchoolService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/echoWithGet", ReplyAction="http://tempuri.org/ISchoolService/echoWithGetResponse")]
        string echoWithGet(string param1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/echoWithGet", ReplyAction="http://tempuri.org/ISchoolService/echoWithGetResponse")]
        System.Threading.Tasks.Task<string> echoWithGetAsync(string param1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/echoWithPost", ReplyAction="http://tempuri.org/ISchoolService/echoWithPostResponse")]
        string echoWithPost(string param1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/echoWithPost", ReplyAction="http://tempuri.org/ISchoolService/echoWithPostResponse")]
        System.Threading.Tasks.Task<string> echoWithPostAsync(string param1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DoWork", ReplyAction="http://tempuri.org/ISchoolService/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DoWork", ReplyAction="http://tempuri.org/ISchoolService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudents", ReplyAction="http://tempuri.org/ISchoolService/GetStudentsResponse")]
        WCF_Teste.ServiceReference1.StudentData[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudents", ReplyAction="http://tempuri.org/ISchoolService/GetStudentsResponse")]
        System.Threading.Tasks.Task<WCF_Teste.ServiceReference1.StudentData[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudent", ReplyAction="http://tempuri.org/ISchoolService/GetStudentResponse")]
        WCF_Teste.ServiceReference1.StudentData GetStudent(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudent", ReplyAction="http://tempuri.org/ISchoolService/GetStudentResponse")]
        System.Threading.Tasks.Task<WCF_Teste.ServiceReference1.StudentData> GetStudentAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/CreateStudent", ReplyAction="http://tempuri.org/ISchoolService/CreateStudentResponse")]
        void CreateStudent(WCF_Teste.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/CreateStudent", ReplyAction="http://tempuri.org/ISchoolService/CreateStudentResponse")]
        System.Threading.Tasks.Task CreateStudentAsync(WCF_Teste.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/UpdateStudent", ReplyAction="http://tempuri.org/ISchoolService/UpdateStudentResponse")]
        void UpdateStudent(WCF_Teste.ServiceReference1.StudentData student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/UpdateStudent", ReplyAction="http://tempuri.org/ISchoolService/UpdateStudentResponse")]
        System.Threading.Tasks.Task UpdateStudentAsync(WCF_Teste.ServiceReference1.StudentData student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteStudent", ReplyAction="http://tempuri.org/ISchoolService/DeleteStudentResponse")]
        void DeleteStudent(int StudentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteStudent", ReplyAction="http://tempuri.org/ISchoolService/DeleteStudentResponse")]
        System.Threading.Tasks.Task DeleteStudentAsync(int StudentID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchoolServiceChannel : WCF_Teste.ServiceReference1.ISchoolService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchoolServiceClient : System.ServiceModel.ClientBase<WCF_Teste.ServiceReference1.ISchoolService>, WCF_Teste.ServiceReference1.ISchoolService {
        
        public SchoolServiceClient() {
        }
        
        public SchoolServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SchoolServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string echoWithGet(string param1) {
            return base.Channel.echoWithGet(param1);
        }
        
        public System.Threading.Tasks.Task<string> echoWithGetAsync(string param1) {
            return base.Channel.echoWithGetAsync(param1);
        }
        
        public string echoWithPost(string param1) {
            return base.Channel.echoWithPost(param1);
        }
        
        public System.Threading.Tasks.Task<string> echoWithPostAsync(string param1) {
            return base.Channel.echoWithPostAsync(param1);
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public WCF_Teste.ServiceReference1.StudentData[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<WCF_Teste.ServiceReference1.StudentData[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public WCF_Teste.ServiceReference1.StudentData GetStudent(int ID) {
            return base.Channel.GetStudent(ID);
        }
        
        public System.Threading.Tasks.Task<WCF_Teste.ServiceReference1.StudentData> GetStudentAsync(int ID) {
            return base.Channel.GetStudentAsync(ID);
        }
        
        public void CreateStudent(WCF_Teste.ServiceReference1.Student student) {
            base.Channel.CreateStudent(student);
        }
        
        public System.Threading.Tasks.Task CreateStudentAsync(WCF_Teste.ServiceReference1.Student student) {
            return base.Channel.CreateStudentAsync(student);
        }
        
        public void UpdateStudent(WCF_Teste.ServiceReference1.StudentData student) {
            base.Channel.UpdateStudent(student);
        }
        
        public System.Threading.Tasks.Task UpdateStudentAsync(WCF_Teste.ServiceReference1.StudentData student) {
            return base.Channel.UpdateStudentAsync(student);
        }
        
        public void DeleteStudent(int StudentID) {
            base.Channel.DeleteStudent(StudentID);
        }
        
        public System.Threading.Tasks.Task DeleteStudentAsync(int StudentID) {
            return base.Channel.DeleteStudentAsync(StudentID);
        }
    }
}
